#
# This is the main Apache HTTP server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See <URL:http://httpd.apache.org/docs/2.4/> for detailed information.
# In particular, see
# <URL:http://httpd.apache.org/docs/2.4/mod/directives.html>
# for a discussion of each configuration directive.
#
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.
#
# Configuration and logfile names: If the filenames you specify for many
# of the server's control files begin with "/" (or "drive:/" for Win32), the
# server will use that explicit path.  If the filenames do *not* begin
# with "/", the value of ServerRoot is prepended -- so "logs/access_log"
# with ServerRoot set to "/usr/local/apache2" will be interpreted by the
# server as "/usr/local/apache2/logs/access_log", whereas "/logs/access_log"
# will be interpreted as '/logs/access_log'.
#
# NOTE: Where filenames are specified, you must use forward slashes
# instead of backslashes (e.g., "c:/apache" instead of "c:\apache").
# If a drive letter is omitted, the drive on which httpd.exe is located
# will be used by default.  It is recommended that you always supply
# an explicit drive letter in absolute paths to avoid confusion.

#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#
# Do not add a slash at the end of the directory path.  If you point
# ServerRoot at a non-local disk, be sure to specify a local disk on the
# Mutex directive, if file-based mutexes are used.  If you wish to share the
# same ServerRoot for multiple httpd daemons, you will need to change at
# least PidFile.
#

Define SRVROOT "C:\Users\jdumont\Desktop\Apache24\Apache24"
ServerRoot "${SRVROOT}"

#
# Mutex: Allows you to set the mutex mechanism and mutex file directory
# for individual mutexes, or change the global defaults
#
# Uncomment and change the directory if mutexes are file-based and the default
# mutex file directory is not on a local disk or is not appropriate for some
# other reason.
#
# Mutex default:logs

#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the <VirtualHost>
# directive.
#
# Change this to Listen on specific IP addresses as shown below to
# prevent Apache from glomming onto all bound IP addresses.
#
#Listen 12.34.56.78:80
Listen 80

#
# Dynamic Shared Object (DSO) Support
#
# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Statically compiled modules (those listed by `httpd -l') do not need
# to be loaded here.
#
# Example:
# LoadModule foo_module modules/mod_foo.so
#

#Group authorizations based on host (name or IP address)
#DO NOT REMOVE
LoadModule access_compat_module modules/mod_access_compat.so

#Execute CGI scripts based on media type or request method.
#REMOVED AFTER TESTING
#LoadModule actions_module modules/mod_actions.so

#Provides for mapping different parts of the host filesystem in the document tree and for URL redirection
#DO NOT REMOVE
LoadModule alias_module modules/mod_alias.so

#Easily restrict what HTTP methods can be used on the server
#REMOVED AFTER TESTING
#LoadModule allowmethods_module modules/mod_allowmethods.so

#Sends files that contain their own HTTP headers
#REMOVED AFTER TESTING
#LoadModule asis_module modules/mod_asis.so

#Basic HTTP authentication
#LoadModule auth_basic_module modules/mod_auth_basic.so

#User authentication using MD5 Digest Authentication
#LoadModule auth_digest_module modules/mod_auth_digest.so

#Form authentication
#LoadModule auth_form_module modules/mod_auth_form.so

#Allows "anonymous" user access to authenticated areas
#LoadModule authn_anon_module modules/mod_authn_anon.so

#Core Authentication
#REMOVED AFTER TESTING
#LoadModule authn_core_module modules/mod_authn_core.so

#User authentication using an SQL database
#LoadModule authn_dbd_module modules/mod_authn_dbd.so

#User authentication using DBM files
#LoadModule authn_dbm_module modules/mod_authn_dbm.so

#User authentication using text files
#REMOVED AFTER TESTING
#LoadModule authn_file_module modules/mod_authn_file.so

#Manages a cache of authentication credentials to relieve the load on backends
#LoadModule authn_socache_module modules/mod_authn_socache.so

#Allows a FastCGI authorizer application to handle Apache httpd authentication and authorization
#LoadModule authnz_fcgi_module modules/mod_authnz_fcgi.so

#Allows an LDAP directory to be used to store the database for HTTP Basic authentication.
#LoadModule authnz_ldap_module modules/mod_authnz_ldap.so

#Core Authorization
#DO NOT REMOVE
LoadModule authz_core_module modules/mod_authz_core.so

#Group Authorization and Login using SQL
#LoadModule authz_dbd_module modules/mod_authz_dbd.so

#Group authorization using DBM files
#LoadModule authz_dbm_module modules/mod_authz_dbm.so

#Group authorization using plaintext files
#REMOVED AFTER TESTING
#LoadModule authz_groupfile_module modules/mod_authz_groupfile.so

#Group authorizations based on host (name or IP address)
#DO NOT REMOVE
LoadModule authz_host_module modules/mod_authz_host.so

#Authorization based on file ownership
#LoadModule authz_owner_module modules/mod_authz_owner.so

#User Authorization
#REMOVED AFTER TESTING
#LoadModule authz_user_module modules/mod_authz_user.so

#Generates directory indexes, automatically, similar to the Unix ls command or the Win32 dir shell command
#DO NOT REMOVE
LoadModule autoindex_module modules/mod_autoindex.so

#Support for request buffering
#LoadModule buffer_module modules/mod_buffer.so

#RFC 2616 compliant HTTP caching filter.
#LoadModule cache_module modules/mod_cache.so

#Disk based storage module for the HTTP caching filter.
#LoadModule cache_disk_module modules/mod_cache_disk.so

#Shared object cache (socache) based storage module for the HTTP caching filter.
#LoadModule cache_socache_module modules/mod_cache_socache.so

#CERN httpd metafile semantics
#LoadModule cern_meta_module modules/mod_cern_meta.so

#Execution of CGI scripts
#REMOVED AFTER TESTING
#LoadModule cgi_module modules/mod_cgi.so

#Specify character set translation or recoding
#LoadModule charset_lite_module modules/mod_charset_lite.so

#Convert response body into an RFC2397 data URL
#LoadModule data_module modules/mod_data.so

#Distributed Authoring and Versioning (WebDAV) functionality
#LoadModule dav_module modules/mod_dav.so

#Filesystem provider for mod_dav
#LoadModule dav_fs_module modules/mod_dav_fs.so

#Generic locking module for mod_dav
#LoadModule dav_lock_module modules/mod_dav_lock.so

#Manages SQL database connections
#LoadModule dbd_module modules/mod_dbd.so

#Compress content before it is delivered to the client
#LoadModule deflate_module modules/mod_deflate.so

#Provides for "trailing slash" redirects and serving directory index files
#DO NOT REMOVE
LoadModule dir_module modules/mod_dir.so

#Dumps all I/O to error log as desired.
#LoadModule dumpio_module modules/mod_dumpio.so

#Modifies the environment which is passed to CGI scripts and SSI pages
#REMOVED AFTER TESTING
#LoadModule env_module modules/mod_env.so

#Generation of Expires and Cache-Control HTTP headers according to user-specified criteria
#LoadModule expires_module modules/mod_expires.so

#Pass the response body through an external program before delivery to the client
#LoadModule ext_filter_module modules/mod_ext_filter.so

#Caches a static list of files in memory
#LoadModule file_cache_module modules/mod_file_cache.so

#Context-sensitive smart filter configuration module
#LoadModule filter_module modules/mod_filter.so

#Customization of HTTP request and response headers
#LoadModule headers_module modules/mod_headers.so

#Sends messages with server status to frontend proxy
#LoadModule heartbeat_module modules/mod_heartbeat.so

#Centralized monitor for mod_heartbeat origin servers
#LoadModule heartmonitor_module modules/mod_heartmonitor.so

#Support for the HTTP/2 transport layer
#LoadModule http2_module modules/mod_http2.so

#RFC 1413 ident lookups
#LoadModule ident_module modules/mod_ident.so

#Server-side imagemap processing
#LoadModule imagemap_module modules/mod_imagemap.so

#Server-parsed html documents (Server Side Includes)
#REMOVED AFTER TESTING
#LoadModule include_module modules/mod_include.so

#Provides a comprehensive overview of the server configuration
#REMOVED AFTER TESTING
#LoadModule info_module modules/mod_info.so

#ISAPI Extensions within Apache for Windows
#REMOVED AFTER TESTING
#LoadModule isapi_module modules/mod_isapi.so

#Pending Request Counting load balancer scheduler algorithm for mod_proxy_balancer
#LoadModule lbmethod_bybusyness_module modules/mod_lbmethod_bybusyness.so

#Request Counting load balancer scheduler algorithm for mod_proxy_balancer
#LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so

#Weighted Traffic Counting load balancer scheduler algorithm for mod_proxy_balancer
#LoadModule lbmethod_bytraffic_module modules/mod_lbmethod_bytraffic.so

#Heartbeat Traffic Counting load balancer scheduler algorithm for mod_proxy_balancer
#LoadModule lbmethod_heartbeat_module modules/mod_lbmethod_heartbeat.so

#LDAP connection pooling and result caching services for use by other LDAP modules
#LoadModule ldap_module modules/mod_ldap.so

#Logging of input and output bytes per request
#LoadModule logio_module modules/mod_logio.so

#Logging of the requests made to the server
LoadModule log_config_module modules/mod_log_config.so

#Additional configurable debug logging
#LoadModule log_debug_module modules/mod_log_debug.so

#Forensic Logging of the requests made to the server
#LoadModule log_forensic_module modules/mod_log_forensic.so

#Provides Lua hooks into various portions of the httpd request processing
#LoadModule lua_module modules/mod_lua.so

#Provides macros within apache httpd runtime configuration files
#LoadModule macro_module modules/mod_macro.so

#Associates the requested filename's extensions with the file's behavior (handlers and filters) and content (mime-type, language, character set and encoding)
#DO NOT REMOVE
LoadModule mime_module modules/mod_mime.so

#Determines the MIME type of a file by looking at a few bytes of its contents
#LoadModule mime_magic_module modules/mod_mime_magic.so

#Provides for content negotiation
#LoadModule negotiation_module modules/mod_negotiation.so

#Multi-protocol proxy/gateway server
#DO NOT REMOVE
LoadModule proxy_module modules/mod_proxy.so

#AJP support module for mod_proxy
#LoadModule proxy_ajp_module modules/mod_proxy_ajp.so

#mod_proxy extension for load balancing
#LoadModule proxy_balancer_module modules/mod_proxy_balancer.so

#mod_proxy extension for CONNECT request handling
#LoadModule proxy_connect_module modules/mod_proxy_connect.so

#Dynamic mass reverse proxy extension for mod_proxy
#LoadModule proxy_express_module modules/mod_proxy_express.so

#FastCGI support module for mod_proxy
#LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so

#FTP support module for mod_proxy
#LoadModule proxy_ftp_module modules/mod_proxy_ftp.so

#Rewrite HTML links in to ensure they are addressable from Clients' networks in a proxy context.
#LoadModule proxy_html_module modules/mod_proxy_html.so

#HTTP support module for mod_proxy
#DO NOT REMOVE
LoadModule proxy_http_module modules/mod_proxy_http.so

#HTTP/2 support module for mod_proxy
#LoadModule proxy_http2_module modules/mod_proxy_http2.so

#SCGI gateway module for mod_proxy
#LoadModule proxy_scgi_module modules/mod_proxy_scgi.so

#Websockets support module for mod_proxy
#LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so

#Bandwidth Rate Limiting for Clients
#LoadModule ratelimit_module modules/mod_ratelimit.so

#Reflect a request body as a response via the output filter stack.
#LoadModule reflector_module modules/mod_reflector.so

#Replaces the original client IP address for the connection with the useragent IP address list presented by a proxies or a load balancer via the request headers.
#LoadModule remoteip_module modules/mod_remoteip.so

#Filters to handle and make available HTTP request bodies
#LoadModule request_module modules/mod_request.so

#Set timeout and minimum data rate for receiving requests
#LoadModule reqtimeout_module modules/mod_reqtimeout.so

#Provides a rule-based rewriting engine to rewrite requested URLs on the fly
#LoadModule rewrite_module modules/mod_rewrite.so

#Filter Input (request) and Output (response) content using sed syntax
#LoadModule sed_module modules/mod_sed.so

#Session support
#LoadModule session_module modules/mod_session.so

#Cookie based session support
#LoadModule session_cookie_module modules/mod_session_cookie.so

#Session encryption support
#LoadModule session_crypto_module modules/mod_session_crypto.so

#DBD/SQL based session support
#LoadModule session_dbd_module modules/mod_session_dbd.so

#Allows the setting of environment variables based on characteristics of the request
#DO NOT REMOVE
LoadModule setenvif_module modules/mod_setenvif.so

#Slot-based shared memory provider.
#LoadModule slotmem_plain_module modules/mod_slotmem_plain.so

#Slot-based shared memory provider.
#LoadModule slotmem_shm_module modules/mod_slotmem_shm.so

#DBM based shared object cache provider.
#LoadModule socache_dbm_module modules/mod_socache_dbm.so

#Memcache based shared object cache provider.
#LoadModule socache_memcache_module modules/mod_socache_memcache.so

#shmcb based shared object cache provider.
#DO NOT REMOVE
LoadModule socache_shmcb_module modules/mod_socache_shmcb.so

#Attempts to correct mistaken URLs by ignoring capitalization, or attempting to correct various minor misspellings.
#LoadModule speling_module modules/mod_speling.so

#Strong cryptography using the Secure Sockets Layer (SSL) and Transport Layer Security (TLS) protocols
#REMOVED AFTER TESTING
#LoadModule ssl_module modules/mod_ssl.so

#Provides information on server activity and performance
#REMOVED AFTER TESTING
#LoadModule status_module modules/mod_status.so

#Perform search and replace operations on response bodies
#LoadModule substitute_module modules/mod_substitute.so

#Provides an environment variable with a unique identifier for each request
#LoadModule unique_id_module modules/mod_unique_id.so

#User-specific directories
#LoadModule userdir_module modules/mod_userdir.so

#Clickstream logging of user activity on a site
#LoadModule usertrack_module modules/mod_usertrack.so

#Version dependent configuration
#LoadModule version_module modules/mod_version.so

#Provides for dynamically configured mass virtual hosting
#LoadModule vhost_alias_module modules/mod_vhost_alias.so

#provides infrastructure for other modules to periodically run tasks
#LoadModule watchdog_module modules/mod_watchdog.so

#Enhanced charset/internationalisation support for libxml2-based filter modules
#LoadModule xml2enc_module modules/mod_xml2enc.so


<IfModule unixd_module>
#
# If you wish httpd to run as a different user or group, you must run
# httpd as root initially and it will switch.
#
# User/Group: The name (or #number) of the user/group to run httpd as.
# It is usually good practice to create a dedicated user and group for
# running httpd, as with most system services.
#
User daemon
Group daemon

</IfModule>

# 'Main' server configuration
#
# The directives in this section set up the values used by the 'main'
# server, which responds to any requests that aren't handled by a
# <VirtualHost> definition.  These values also provide defaults for
# any <VirtualHost> containers you may define later in the file.
#
# All of these directives may appear inside <VirtualHost> containers,
# in which case these default settings will be overridden for the
# virtual host being defined.
#

#
# ServerAdmin: Your address, where problems with the server should be
# e-mailed.  This address appears on some server-generated pages, such
# as error documents.  e.g. admin@your-domain.com
#
ServerAdmin admin@example.com

#
# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.
#
# If your host doesn't have a registered DNS name, enter its IP address here.
#
ServerName localhost:80

#
# Deny access to the entirety of your server's filesystem. You must
# explicitly permit access to web content directories in other
# <Directory> blocks below.
#

<Directory />
AllowOverride none
Require all denied
</Directory>

#
# Note that from this point forward you must specifically allow
# particular features to be enabled - so if something's not working as
# you might expect, make sure that you have specifically enabled it
# below.
#

#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#
DocumentRoot "${SRVROOT}/htdocs"
<Directory "${SRVROOT}/htdocs">
#
# Possible values for the Options directive are "None", "All",
# or any combination of:
#   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
#
# Note that "MultiViews" must be named *explicitly* --- "Options All"
# doesn't give it to you.
#
# The Options directive is both complicated and important.  Please see
# http://httpd.apache.org/docs/2.4/mod/core.html#options
# for more information.
#
Options Indexes FollowSymLinks

#
# AllowOverride controls what directives may be placed in .htaccess files.
# It can be "All", "None", or any combination of the keywords:
#   Options FileInfo AuthConfig Limit
#
AllowOverride None

#
# Controls who can get stuff from this server.
#
Require all granted
</Directory>

#
# DirectoryIndex: sets the file that Apache will serve if a directory
# is requested.
#
<IfModule dir_module>
DirectoryIndex index.html
</IfModule>

#
# The following lines prevent .htaccess and .htpasswd files from being
# viewed by Web clients.
#
<Files ".ht*">
Require all denied
</Files>

#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
ErrorLog "logs/error.log"

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel warn

<IfModule log_config_module>
#
# The following directives define some format nicknames for use with
# a CustomLog directive (see below).
#
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %b" common

<IfModule logio_module>
# You need to enable mod_logio.c to use %I and %O
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
</IfModule>

#
# The location and format of the access logfile (Common Logfile Format).
# If you do not define any access logfiles within a <VirtualHost>
# container, they will be logged here.  Contrariwise, if you *do*
# define per-<VirtualHost> access logfiles, transactions will be
# logged therein and *not* in this file.
#
CustomLog "logs/access.log" common

#
# If you prefer a logfile with access, agent, and referer information
# (Combined Logfile Format) you can use the following directive.
#
#CustomLog "logs/access.log" combined
</IfModule>

<IfModule alias_module>
#
# Redirect: Allows you to tell clients about documents that used to
# exist in your server's namespace, but do not anymore. The client
# will make a new request for the document at its new location.
# Example:
# Redirect permanent /foo http://www.example.com/bar

#
# Alias: Maps web paths into filesystem paths and is used to
# access content that does not live under the DocumentRoot.
# Example:
# Alias /webpath /full/filesystem/path
#
# If you include a trailing / on /webpath then the server will
# require it to be present in the URL.  You will also likely
# need to provide a <Directory> section to allow access to
# the filesystem path.

#
# ScriptAlias: This controls which directories contain server scripts.
# ScriptAliases are essentially the same as Aliases, except that
# documents in the target directory are treated as applications and
# run by the server when requested rather than as documents sent to the
# client.  The same rules about trailing "/" apply to ScriptAlias
# directives as to Alias.
#
ScriptAlias /cgi-bin/ "${SRVROOT}/cgi-bin/"

</IfModule>

<IfModule cgid_module>
#
# ScriptSock: On threaded servers, designate the path to the UNIX
# socket used to communicate with the CGI daemon of mod_cgid.
#
#Scriptsock logs/cgisock
</IfModule>

#
# "${SRVROOT}/cgi-bin" should be changed to whatever your ScriptAliased
# CGI directory exists, if you have that configured.
#
<Directory "${SRVROOT}/cgi-bin">
AllowOverride None
Options None
Require all granted
</Directory>

<IfModule mime_module>
#
# TypesConfig points to the file containing the list of mappings from
# filename extension to MIME-type.
#
TypesConfig conf/mime.types

#
# AddType allows you to add to or override the MIME configuration
# file specified in TypesConfig for specific file types.
#
#AddType application/x-gzip .tgz
#
# AddEncoding allows you to have certain browsers uncompress
# information on the fly. Note: Not all browsers support this.
#
#AddEncoding x-compress .Z
#AddEncoding x-gzip .gz .tgz
#
# If the AddEncoding directives above are commented-out, then you
# probably should define those extensions to indicate media types:
#
AddType application/x-compress .Z
AddType application/x-gzip .gz .tgz

#
# AddHandler allows you to map certain file extensions to "handlers":
# actions unrelated to filetype. These can be either built into the server
# or added with the Action directive (see below)
#
# To use CGI scripts outside of ScriptAliased directories:
# (You will also need to add "ExecCGI" to the "Options" directive.)
#
#AddHandler cgi-script .cgi .pl

# For type maps (negotiated resources):
#AddHandler type-map var

#
# Filters allow you to process content before it is sent to the client.
#
# To parse .shtml files for server-side includes (SSI):
# (You will also need to add "Includes" to the "Options" directive.)
#
#AddType text/html .shtml
#AddOutputFilter INCLUDES .shtml
</IfModule>

#
# The mod_mime_magic module allows the server to use various hints from the
# contents of the file itself to determine its type.  The MIMEMagicFile
# directive tells the module where the hint definitions are located.
#
#MIMEMagicFile conf/magic

#
# Customizable error responses come in three flavors:
# 1) plain text 2) local redirects 3) external redirects
#
# Some examples:
#ErrorDocument 500 "The server made a boo boo."
#ErrorDocument 404 /missing.html
#ErrorDocument 404 "/cgi-bin/missing_handler.pl"
#ErrorDocument 402 http://www.example.com/subscription_info.html
#

#
# MaxRanges: Maximum number of Ranges in a request before
# returning the entire resource, or one of the special
# values 'default', 'none' or 'unlimited'.
# Default setting is to accept 200 Ranges.
#MaxRanges unlimited

#
# EnableMMAP and EnableSendfile: On systems that support it,
# memory-mapping or the sendfile syscall may be used to deliver
# files.  This usually improves server performance, but must
# be turned off when serving from networked-mounted
# filesystems or if support for these functions is otherwise
# broken on your system.
# Defaults: EnableMMAP On, EnableSendfile Off
#
#EnableMMAP off
#EnableSendfile on

#AcceptFilter http none
#AcceptFilter https none

# Supplemental configuration
#
# The configuration files in the conf/extra/ directory can be
# included to add extra features or to modify the default configuration of
# the server, or you may simply copy their contents here and change as
# necessary.

# Server-pool management (MPM specific)
#Include conf/extra/httpd-mpm.conf

# Multi-language error messages
#Include conf/extra/httpd-multilang-errordoc.conf

# Fancy directory listings
Include conf/extra/httpd-autoindex.conf

# Language settings
#Include conf/extra/httpd-languages.conf

# User home directories
#Include conf/extra/httpd-userdir.conf

# Real-time info on requests and configuration
Include conf/extra/httpd-info.conf

# Virtual hosts
Include conf/extra/httpd-vhosts.conf

# Local access to the Apache HTTP Server Manual
#Include conf/extra/httpd-manual.conf

# Distributed authoring and versioning (WebDAV)
#Include conf/extra/httpd-dav.conf

# Various default settings
#Include conf/extra/httpd-default.conf

# Configure mod_proxy_html to understand HTML4/XHTML1
<IfModule proxy_html_module>
Include conf/extra/httpd-proxy-html.conf
</IfModule>

# Secure (SSL/TLS) connections
# Note: The following must must be present to support
#       starting without SSL on platforms with no /dev/random equivalent
#       but a statically compiled-in mod_ssl.
#
<IfModule ssl_module>
#Include conf/extra/httpd-ssl.conf
Include conf/extra/httpd-ahssl.conf
SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
</IfModule>
<IfModule http2_module>
ProtocolsHonorOrder On
Protocols h2 h2c http/1.1
</IfModule>

# Disable caching to serve our development files fresh each time
<IfModule headers_module>
Header set Cache-Control "no-cache, no-store, must-revalidate"
Header set Pragma "no-cache"
Header set Expires 0
</IfModule>
